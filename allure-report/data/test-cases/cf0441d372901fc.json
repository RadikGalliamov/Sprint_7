{"uid":"cf0441d372901fc","name":"Нельзя создать двух одинаковых курьеров","fullName":"tests.test_courier_registration.TestCourierRegistration#test_duplicate_login_courier_registration","historyId":"eb224f2f634861a5fc879c88775f4602","time":{"start":1705238704072,"stop":1705238704809,"duration":737},"status":"failed","statusMessage":"AssertionError: Текст ошибки не соответствует ожидаемому 'Этот логин уже используется'\nassert 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\n  - Этот логин уже используется\n  + Этот логин уже используется. Попробуйте другой.","statusTrace":"self = <tests.test_courier_registration.TestCourierRegistration object at 0x000002A5FFAA74D0>\n\n    @allure.title(\"Нельзя создать двух одинаковых курьеров\")\n    def test_duplicate_login_courier_registration(self):\n        first_courier = register_courier()\n        response = requests.post(TestDataUrl.COURIER_URL, data=first_courier)\n        assert response.status_code == 409, f\"Ожидался код состояния 409, но был получен {response.status_code}. Ответ: {response.text}\"\n>       assert response.json()[\"message\"] == \"Этот логин уже используется\", \"Текст ошибки не соответствует ожидаемому 'Этот логин уже используется'\"\nE       AssertionError: Текст ошибки не соответствует ожидаемому 'Этот логин уже используется'\nE       assert 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\nE         - Этот логин уже используется\nE         + Этот логин уже используется. Попробуйте другой.\n\ntests\\test_courier_registration.py:36: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: Текст ошибки не соответствует ожидаемому 'Этот логин уже используется'\nassert 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\n  - Этот логин уже используется\n  + Этот логин уже используется. Попробуйте другой.","statusTrace":"self = <tests.test_courier_registration.TestCourierRegistration object at 0x000002A5FFAA74D0>\n\n    @allure.title(\"Нельзя создать двух одинаковых курьеров\")\n    def test_duplicate_login_courier_registration(self):\n        first_courier = register_courier()\n        response = requests.post(TestDataUrl.COURIER_URL, data=first_courier)\n        assert response.status_code == 409, f\"Ожидался код состояния 409, но был получен {response.status_code}. Ответ: {response.text}\"\n>       assert response.json()[\"message\"] == \"Этот логин уже используется\", \"Текст ошибки не соответствует ожидаемому 'Этот логин уже используется'\"\nE       AssertionError: Текст ошибки не соответствует ожидаемому 'Этот логин уже используется'\nE       assert 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\nE         - Этот логин уже используется\nE         + Этот логин уже используется. Попробуйте другой.\n\ntests\\test_courier_registration.py:36: AssertionError","steps":[{"name":"Регистрация нового курьера","time":{"start":1705238704072,"stop":1705238704438,"duration":366},"status":"passed","steps":[{"name":"Генерация случайной строки заданной длины","time":{"start":1705238704072,"stop":1705238704072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"length","value":"10"}],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Генерация случайной строки заданной длины","time":{"start":1705238704072,"stop":1705238704072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"length","value":"10"}],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Генерация случайной строки заданной длины","time":{"start":1705238704072,"stop":1705238704072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"length","value":"10"}],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[{"name":"payload","value":"None"}],"stepsCount":3,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_courier_registration"},{"name":"subSuite","value":"TestCourierRegistration"},{"name":"host","value":"LAPTOP-1KK7H688"},{"name":"thread","value":"10292-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_courier_registration"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"cf0441d372901fc.json","parameterValues":[]}